import type { Action, EntitySet, EntityType } from '@sap-ux/vocabularies-types';
import type ODataRequest from '../../request/odataRequest';
import type { KeyDefinitions } from '../../request/odataRequest';
import type { DataAccessInterface } from '../common';
import { MockDataEntitySet } from './entitySet';
/**
 *
 */
export declare class StickyMockEntitySet extends MockDataEntitySet {
    private _currentSessionObject;
    private currentUUID?;
    private sessionTimeoutRef;
    sessionTimeoutTime: number;
    private readonly discardAction;
    constructor(rootFolder: string, entitySetDefinition: EntitySet | EntityType, dataAccess: DataAccessInterface, generateMockData: boolean);
    private getSessionObject;
    private setSessionObject;
    resetSessionTimeout(tenantId: string): any;
    performPATCH(keyValues: KeyDefinitions, patchData: object, tenantId: string, odataRequest: ODataRequest): Promise<any>;
    executeAction(actionDefinition: Action, actionData: object | undefined, odataRequest: ODataRequest, keys: Record<string, any>): Promise<any>;
    addSessionToken(odataRequest: ODataRequest): void;
    performGET(keyValues: KeyDefinitions, asArray: boolean, tenantId: string, odataRequest: ODataRequest, dontClone?: boolean): any;
    isDiscardAction(action: Action): boolean;
}
//# sourceMappingURL=stickyEntitySet.d.ts.map