import type { ReaderCollection } from '@ui5/fs';
import type { App, FlpConfig } from '../types';
import type { Logger } from '@sap-ux/logger';
import type { MiddlewareUtils } from '@ui5/server';
import type { Manifest, UI5FlexLayer } from '@sap-ux/project-access';
/**
 * Internal structure used to fill the sandbox.html template
 */
export interface TemplateConfig {
    basePath: string;
    apps: Record<string, {
        title: string;
        description: string;
        additionalInformation: string;
        applicationType: 'URL';
        url: string;
    }>;
    ui5: {
        libs: string;
        theme: string;
        flex: {
            applyConnector: string;
            writeConnector: string;
            custom: boolean;
        }[];
        resources: Record<string, string>;
    };
    flex?: {
        layer: UI5FlexLayer;
        developerMode: boolean;
    };
    locateReuseLibsScript?: string;
}
/**
 * Class handling preview of a sandbox FLP.
 */
export declare class FlpSandbox {
    private readonly project;
    private readonly utils;
    private readonly logger;
    protected templateConfig: TemplateConfig;
    readonly config: FlpConfig;
    readonly router: any;
    /**
     * Constructor setting defaults and keeping reference to workspace resources.
     *
     * @param config configuration from the ui5.yaml
     * @param project reference to the project provided by the UI5 CLI
     * @param utils middleware utilities provided by the UI5 CLI
     * @param logger logger instance
     */
    constructor(config: Partial<FlpConfig>, project: ReaderCollection, utils: MiddlewareUtils, logger: Logger);
    /**
     * Initialize the FLP sandbox router.
     *
     * @param manifest application manifest
     * @param componentId optional componentId e.g. for adaptation projects
     * @param resources optional additional resource mappings
     */
    init(manifest: Manifest, componentId?: string, resources?: Record<string, string>): Promise<void>;
    /**
     * Add routes for html and scripts required for a local FLP.
     */
    private addStandardRoutes;
    /**
     * Try finding a locate-reuse-libs script in the project.
     *
     * @returns the location of the locate-reuse-libs script or undefined.
     */
    private findLocateReuseLibsScript;
    /**
     * Add additional routes for apps also to be shown in the local FLP.
     */
    private addRoutesForAdditionalApps;
    /**
     * Create required routes for flex.
     *
     * @returns template configuration for flex.
     */
    private createFlexHandler;
    /**
     * Add an application to the local FLP preview.
     *
     * @param manifest manifest of the additional target app
     * @param app configuration for the preview
     */
    addApp(manifest: Manifest, app: App): void;
}
//# sourceMappingURL=flp.d.ts.map